# The system name that uniquely identifies the jig
title: List Contacts
# Description of the jig. This is not a required field and can be omitted.
description: Contact information you need at your fingertips
# The jig type used to list data values and elements
type: jig.list
# icon that displays on the widget on the home hub
icon: contact

placeholders:
  - when: =$count(@ctx.datasources.contactData) = 0
    title: Oops! You don't have any contacts.
    icon: loading-data

header:
  type: component.jig-header
  options:
    height: small
    children:
      type: component.image
      options:
        source:
          uri: https://builder.jigx.com/assets/images/captureinfo.jpg

# The top-level action on a default jig places a button at the bottom of the screen   
actions:
  - children:
      # The navigation action that is performed when the go-to action completes
      - type: action.go-to
        options:
          title: Add Contact
          linkTo: create-contact

# The type of datasource used to store the created data in the jig
datasources:
  contactData: 
    type: datasource.sqlite
    options:
      # The data provider being used. In this case, the Jigx Dynamic Data provider
      provider: DATA_PROVIDER_DYNAMIC
      # The name of the table that the information is being returned from. All Dynamic Data-based tables
      # are defined in "default.jigx" under databases.
      entities:
        - default/contacts
      # The SQLite query used to specify the data to return 
      query: |
        SELECT 
          id,
          '$.firstName',
          '$.lastName',
          '$.jobTitle',
          '$.companyName',
          '$.phone',
          '$.email' 
        FROM 
          [default/contacts]
        ORDER BY '$.companyName'

data: =@ctx.datasources.contactData
# All list output controls are placed on the list-item component
item:
  type: component.list-item
  options:
    title: =@ctx.current.item.companyName
    subtitle: =@ctx.current.item.firstName & ' ' & @ctx.current.item.lastName
    description: =@ctx.current.item.jobTitle
    leftElement: 
      element: avatar
      text: =$substring(@ctx.current.item.firstName, 0, 1) & $substring(@ctx.current.item.lastName, 0, 1)
    # The navigation action that is performed when an individual item is tapped in the list, in this instance
    # to view the contact details
    onPress: 
      type: action.go-to
      options:
        linkTo: view-contact
        parameters:
          contact: =@ctx.current.item
    # The list-item action that defines what to do when swiping left or right on the item
    swipeable:
      left:
        - label: DELETE
          icon: delete-2
          color: negative
          onPress: 
            type: action.execute-entity
            options:
              provider: DATA_PROVIDER_DYNAMIC
              entity: default/contacts
              method: delete
              goBack: stay
              data:
                id: =@ctx.current.item.id
        - label: EDIT
          icon: edit-pdf
          color: primary
          onPress: 
            type: action.go-to
            options:
              linkTo: edit-contact
              parameters:
                contact: =@ctx.current.item

